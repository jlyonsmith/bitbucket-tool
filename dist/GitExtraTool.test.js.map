{"version":3,"sources":["../src/GitExtraTool.test.js"],"names":["toolName","tmpDirObj","beforeAll","tmp","dirSync","afterAll","removeCallback","getMockLog","info","jest","fn","warning","error","getOutput","calls","mock","length","test","done","mockLog","tool","BitbucketTool","run","then","exitCode","expect","toBe","toEqual","stringContaining","stringMatching"],"mappings":";;AAAA;;AACA;;;;AAEA,MAAMA,QAAQ,GAAG,QAAjB;AACA,IAAIC,SAAS,GAAG,IAAhB;AAEAC,SAAS,CAAC,MAAM;AACdD,EAAAA,SAAS,GAAGE,aAAIC,OAAJ,EAAZ;AACD,CAFQ,CAAT;AAIAC,QAAQ,CAAC,MAAM;AACb,MAAIJ,SAAJ,EAAe;AACbA,IAAAA,SAAS,CAACK,cAAV;AACD;AACF,CAJO,CAAR;;AAMA,SAASC,UAAT,GAAsB;AACpB,SAAO;AACLC,IAAAA,IAAI,EAAEC,IAAI,CAACC,EAAL,EADD;AAELC,IAAAA,OAAO,EAAEF,IAAI,CAACC,EAAL,EAFJ;AAGLE,IAAAA,KAAK,EAAEH,IAAI,CAACC,EAAL;AAHF,GAAP;AAKD;;AAED,SAASG,SAAT,CAAmBH,EAAnB,EAAuB;AACrB,QAAMI,KAAK,GAAGJ,EAAE,CAACK,IAAH,CAAQD,KAAtB;;AACA,MAAIA,KAAK,CAACE,MAAN,GAAe,CAAf,IAAoBF,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,GAAkB,CAA1C,EAA6C;AAC3C,WAAOF,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF;;AAEDG,IAAI,CAAC,QAAD,EAAYC,IAAD,IAAU;AACvB,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAMa,IAAI,GAAG,IAAIC,4BAAJ,CAAkBrB,QAAlB,EAA4BmB,OAA5B,CAAb;AAEA,SAAOC,IAAI,CAACE,GAAL,CAAS,CAAC,QAAD,CAAT,EAAqBC,IAArB,CAA2BC,QAAD,IAAc;AAC7CC,IAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsB,CAAtB;AACAD,IAAAA,MAAM,CAACZ,SAAS,CAACM,OAAO,CAACX,IAAT,CAAV,CAAN,CAAgCmB,OAAhC,CAAwCF,MAAM,CAACG,gBAAP,CAAwB,QAAxB,CAAxC;AACAV,IAAAA,IAAI;AACL,GAJM,CAAP;AAKD,CATG,CAAJ;AAWAD,IAAI,CAAC,WAAD,EAAeC,IAAD,IAAU;AAC1B,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAMa,IAAI,GAAG,IAAIC,4BAAJ,CAAkBrB,QAAlB,EAA4BmB,OAA5B,CAAb;AAEA,SAAOC,IAAI,CAACE,GAAL,CAAS,CAAC,WAAD,CAAT,EAAwBC,IAAxB,CAA8BC,QAAD,IAAc;AAChDC,IAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsB,CAAtB;AACAD,IAAAA,MAAM,CAACZ,SAAS,CAACM,OAAO,CAACX,IAAT,CAAV,CAAN,CAAgCmB,OAAhC,CAAwCF,MAAM,CAACI,cAAP,CAAsB,IAAtB,CAAxC;AACAX,IAAAA,IAAI;AACL,GAJM,CAAP;AAKD,CATG,CAAJ","sourcesContent":["import { BitbucketTool } from \"./BitbucketTool\"\nimport tmp from \"tmp\"\n\nconst toolName = \"bucket\"\nlet tmpDirObj = null\n\nbeforeAll(() => {\n  tmpDirObj = tmp.dirSync()\n})\n\nafterAll(() => {\n  if (tmpDirObj) {\n    tmpDirObj.removeCallback()\n  }\n})\n\nfunction getMockLog() {\n  return {\n    info: jest.fn(),\n    warning: jest.fn(),\n    error: jest.fn(),\n  }\n}\n\nfunction getOutput(fn) {\n  const calls = fn.mock.calls\n  if (calls.length > 0 && calls[0].length > 0) {\n    return calls[0][0]\n  } else {\n    return \"\"\n  }\n}\n\ntest(\"--help\", (done) => {\n  const mockLog = getMockLog()\n  const tool = new BitbucketTool(toolName, mockLog)\n\n  return tool.run([\"--help\"]).then((exitCode) => {\n    expect(exitCode).toBe(0)\n    expect(getOutput(mockLog.info)).toEqual(expect.stringContaining(\"--help\"))\n    done()\n  })\n})\n\ntest(\"--version\", (done) => {\n  const mockLog = getMockLog()\n  const tool = new BitbucketTool(toolName, mockLog)\n\n  return tool.run([\"--version\"]).then((exitCode) => {\n    expect(exitCode).toBe(0)\n    expect(getOutput(mockLog.info)).toEqual(expect.stringMatching(/^v/))\n    done()\n  })\n})\n"],"file":"GitExtraTool.test.js"}