{"version":3,"sources":["../src/BitbucketTool.js"],"names":["streamToString","readable","stream","Readable","toString","Promise","resolve","reject","string","on","buffer","read","error","pipe","writeable","execAsync","cp","exec","BitbucketTool","autobind","constructor","toolName","log","ensureCommands","cmds","Set","newCmds","filter","cmd","has","exists","all","map","forEach","Error","add","getRemotes","result","output","stdout","re","RegExp","remotes","arr","name","site","user","slug","groups","push","browse","upstream","remote","match","url","info","wait","warning","pullRequest","run","argv","options","boolean","alias","u","default","args","version","fullVersion","command","_","toLowerCase","subCommand","help"],"mappings":"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","sourcesContent":["import parseArgs from \"minimist\"\nimport { fullVersion } from \"./version\"\nimport autobind from \"autobind-decorator\"\nimport { promises as fs } from \"fs\"\nimport cp from \"child_process\"\nimport commandExists from \"command-exists\"\nimport stream from \"stream\"\nimport { promisify } from \"util\"\nimport opn from \"opn\"\n\nfunction streamToString(readable) {\n  if (!(readable instanceof stream.Readable)) {\n    return readable.toString()\n  }\n\n  return new Promise((resolve, reject) => {\n    let string = \"\"\n\n    readable.on(\"readable\", (buffer) => {\n      string += buffer.read().toString()\n    })\n\n    readable.on(\"end\", () => {\n      resolve(string)\n    })\n\n    readable.on(\"error\", (error) => {\n      reject(error)\n    })\n\n    readable.pipe(writeable)\n  })\n}\n\nconst execAsync = promisify(cp.exec)\n\n@autobind\nexport class BitbucketTool {\n  constructor(toolName, log) {\n    this.toolName = toolName\n    this.log = log\n  }\n\n  async ensureCommands(cmds) {\n    this.cmds = this.cmds || new Set()\n\n    const newCmds = cmds.filter((cmd) => !this.cmds.has(cmd))\n    const exists = await Promise.all(newCmds.map((cmd) => commandExists(cmd)))\n\n    newCmds.forEach((cmd) => {\n      if (!!exists[cmd]) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      } else {\n        this.cmds.add(cmd)\n      }\n    })\n  }\n\n  async getRemotes() {\n    await this.ensureCommands([\"git\"])\n\n    const result = await execAsync(\"git remote -vv\")\n    const output = await streamToString(result.stdout)\n    const re = new RegExp(\n      \"^(?<name>[a-zA-Z0-9-]+)\\\\s+git@(?<site>bitbucket\\\\.org|github\\\\.com):(?<user>[a-zA-Z0-9-]+)/(?<slug>[a-zA-Z0-9-]+).git\\\\s+\\\\(fetch\\\\)$\",\n      \"gm\"\n    )\n\n    let remotes = []\n    let arr = null\n\n    while ((arr = re.exec(output)) !== null) {\n      const { name, site, user, slug } = arr.groups\n\n      remotes.push({ name, site, user, slug })\n    }\n\n    return remotes\n  }\n\n  async browse(upstream) {\n    const remotes = await this.getRemotes()\n\n    for (const remote of remotes) {\n      if (\n        (upstream && remote.name.match(/upstream|official|parent/)) ||\n        (!upstream && remote.name === \"origin\")\n      ) {\n        const url = `https://${remote.site}/${remote.user}/${remote.slug}`\n\n        this.log.info(`Opening ${url}...`)\n        opn(url, { wait: false })\n        return\n      }\n    }\n\n    this.log.warning(\"No appropriate git remote was found\")\n  }\n\n  async pullRequest() {\n    // TODO: Implement pull request creation\n    const remotes = await this.getRemotes()\n\n    for (const remote of remotes) {\n      if (remote.name.match(/upstream|official|parent/)) {\n        const url = `https://${remote.site}/${remote.user}/${\n          remote.slug\n        }/pull-request/new`\n        this.log.info(`Opening ${url}...`)\n        opn(url, { wait: false })\n        return\n      }\n    }\n\n    this.log.warning(\"No appropriate git upstream repository was found\")\n  }\n\n  async run(argv) {\n    const options = {\n      string: [\"remote\"],\n      boolean: [\"help\", \"version\", \"debug\", \"upstream\"],\n      alias: {\n        u: \"upstream\",\n      },\n      default: {\n        remote: \"origin\",\n      },\n    }\n\n    const args = parseArgs(argv, options)\n\n    if (args.version) {\n      this.log.info(`v${fullVersion}`)\n      return 0\n    }\n\n    let command = args._[0]\n\n    command = command ? command.toLowerCase() : \"help\"\n\n    const subCommand = args._[1]\n\n    switch (command) {\n      case \"pull-request\":\n      case \"prq\": // TODO: Make configurable\n        if (args.help && !subCommand) {\n          this.log.info(`Usage: ${this.toolName} pull-request <options>\n\nDescription:\n\nCreate a new pull requests.\n`)\n          return 0\n        }\n\n        await this.pullRequest()\n        break\n\n      case \"browse\":\n      case \"brw\": // TODO: Make configurable\n        if (args.help && !subCommand) {\n          this.log.info(`Usage: ${this.toolName} browse <options>\n\nDescription:\n\nBrowse to the current repository in your browser.\n\nOptions:\n\n  --upstream, -u      Use the remote named 'upstream', 'parent' or 'official' to\n                      open the upstream repository for a fork.\n`)\n          return 0\n        }\n\n        await this.browse(args.upstream)\n\n        break\n\n      case \"help\":\n      default:\n        this.log.info(`\nBitbucket Tool\n\nUsage: ${this.toolName} <command> ...\n\nProvides command line Bitbucket integration.\n\nCommands:\n  browse            Browse to the current or parent repository\n  pull-request      Create, modify, list or remove pull requests\n\nGlobal Options:\n  --help      Displays this help\n  --version   Displays tool version\n  --debug     Show debug output\n`)\n        return 0\n    }\n\n    return 0\n  }\n}\n"],"file":"BitbucketTool.js"}